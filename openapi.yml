openapi: 3.0.1
info:
  title: OCR-D Web API
  description: >
    # <h1>HTTP API for offering OCR-D processing</h1>

    > This document defines the [data model](#/components/schemas) and
    various HTTP APIs related to OCR-D

    ## OCR-D API compatibility

    An implementation may claim compatibility with a `OCR-D ${N} API v{$V}` iff

      * it implements all the methods tagged `${N}`
      * at major version `${V}` of this API definition

    ## Media types

    ### `application/json`

    Content serialized as `application/json` is defined by the [data model](#/components/schema)

    ### `application/vnd.ocrd+zip`

    Defined in https://ocr-d.de/en/spec/ocrd_zip

    ### `text/vnd.ocrd+sh`

    Defined in https://ocr-d.de/en/spec/ocrdwf
  contact:
    email: info@ocr-d.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: OCR-D Website
  url: 'http://ocr-d.de'
servers:
  - url: 'https://example.org/ocrd/v1'
tags:
  - name: discovery
    description: Discovery of capabilities of a server
  - name: workspace
    description: mets.xml-indexed BagIt container
  - name: processing
    description: OCR-D processing and processors
  - name: training
    description: Training of OCR engines
  - name: acl
    description: Authorization and authentication

paths:

  '/processor':
    get:
      tags: ['processing', 'discovery']
      operationId: listProcessors
      responses:
        '200':
          description: List all processors
          content:
            application/json: {schema: {$ref: '#/components/schemas/ProcessorList'}}

  '/processor/{executable}':
    get:
      tags: ['processing', 'discovery']
      operationId: gettProcessor
      parameters:
        - name: executable
          in: path
          description: Name of the executable
          schema: {$ref: '#/components/schemas/OcrdExecutable'}
          required: true
      responses:
        '200':
          description: Get this processor
          content:
            application/json: {schema: {$ref: '#/components/schemas/Processor'}}
        '404': {content: {}, description: 'Processor not available'}
    post:
      tags: ['processing']
      operationId: runProcessor
      parameters:
        - name: executable
          in: path
          description: Name of the executable
          schema: {$ref: '#/components/schemas/OcrdExecutable'}
          required: true
      requestBody:
        description: Execute this ProcessorCall
        content:
          application/json: {schema: {$ref: '#/components/schemas/ProcessorArgs'}}
        required: true
      responses:
        '200':
          description: Return the ProcessorJob running this ProcessorCall
          content: {application/json: {schema: {$ref: '#/components/schemas/ProcessorJob'}}}

  '/processor/{executable}/{job-id}':
    get:
      tags: ['processing']
      operationId: getProcessorJob
      parameters:
        - name: executable
          in: path
          description: Name of the executable
          schema: {$ref: '#/components/schemas/OcrdExecutable'}
          required: true
        - name: job-id
          in: path
          description: ID of the ProcessorJob
          schema: {type: string}
          required: true
      responses:
        '200':
          description: Return ProcessorJob
          content: {application/json: {schema: {$ref: '#/components/schemas/ProcessorJob'}}}
        '404': {content: {}, description: 'Processor not available'}

  '/workflow':
    post:
      tags: ['processing']
      operationId: postWorkflow
      requestBody:
        description: 'Register a new workflow'
        content:
          'text/vnd.ocrd+sh': {}
        required: true
      responses:
        '200':
          description: Created a new OCR-D workflow
          content: {application/json: {schema: {$ref: '#/components/schemas/Workflow'}}}

  '/workflow/{workflow-id}':
    put:
      tags: ['processing']
      operationId: putWorkflow
      parameters:
        - name: workflow-id
          in: path
          description: ID of the Workflow
          schema: {type: string}
          required: true
      requestBody:
        description: 'Replace existing or create new workflow'
        content:
          'text/vnd.ocrd+sh': {}
        required: true
      responses:
        '200':
          description: Created a new OCR-D workflow
          content: {application/json: {schema: {$ref: '#/components/schemas/Workflow'}}}
    get:
      tags: ['processing']
      operationId: getWorkflow
      parameters:
        - name: workflow-id
          in: path
          description: ID of the Workflow
          schema: {type: string}
          required: true
      responses:
        '200':
          description: Return ProcessorJob
          content:
            application/json: {schema: {$ref: '#/components/schemas/Workflow'}}
            'text/vnd.ocrd+sh': {}
        '404': {content: {}, description: 'Workflow not available'}
    post:
      tags: ['processing']
      operationId: runWorkflow
      parameters:
        - name: workflow-id
          in: path
          description: ID of the Workflow
          schema: {type: string}
          required: true
      responses:
        '200':
          description: Return WorkflowJob
          content:
            application/json: {schema: {$ref: '#/components/schemas/WorkflowJob'}}

  '/workspace':
    get:
      tags: ['workspace']
      operationId: getWorkspaces
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Workspace not found
          content: {}
        '410':
          description: Workspace deleted
          content: {}
    post:
      tags: ['workspace']
      summary: Replace an existing workspace
      operationId: createWorkspace
      requestBody:
        description: OCRD-ZIP of the updated new workspace
        content:
          application/vnd.ocrd+zip: {}
        required: true
      responses:
        201:
          description: Workspace created
          content:
            application/json: {schema: {$ref: '/components/schemas/Workspace'}}
    put:
      tags: ['workspace']
      summary: Replace an existing workspace
      operationId: replaceWorkspace
      requestBody:
        description: OCRD-ZIP of the updated workspace
        content:
          multipart/form-data:
            schema: {$ref: '#/components/schemas/WorkspaceRequest'}
        required: true
      responses:
        200:
          description: Successfully replaced workspace
          content: 
            application/json: {schema: {$ref: '#/components/schemas/Workspace'}}

  '/discovery':
    get:
      tags: ['discovery']
      operationId: discover
      responses:
        '200':
          description: Return DiscoveryResponse
          content:
            application/json: {schema: {$ref: '#/components/schemas/DiscoveryResponse'}}

components:
  schemas:
    Resource:
      type: object
      required: ['@id']
      properties:
        '@id':
          type: string
          description: URL of this thing
        description:
          type: string
          description: description of the thing
    JobState:
      type: string
      pattern: '^(QUEUED|RUNNING|STOPPED)'
    JobLog:
      allOf:
        - {$ref: '#/components/schemas/Resource'}
    Workspace:
      allOf:
        - {$ref: '#/components/schemas/Resource'}
    WorkspaceRequest:
      type: object
      properties:
        json:
          $ref: '#/components/schemas/Workspace'
        workspace:
          type: string
          format: binary
    Job:
      allOf:
        - {$ref: '#/components/schemas/Resource'}
        - type: object
          properties:
            state:
              $ref: '#/components/schemas/JobState'
            log:
              $ref: '#/components/schemas/JobLog'
    OcrdExecutable:
      type: string
      pattern: '^ocrd-.*'
    Processor:
      description: The ocrd-tool.json for a specific tool
      x-$ref: 'https://ocr-d.de/ocrd_tool.schema.json#/properties/tools/patternProperties/ocrd-.*'
    ProcessorList:
      description: Maps OCR-D executables to their resp. ocrd-tool.json
      type: array
      items:
        type: object
        items: {$ref: '#/components/schemas/Processor'}
    ProcessorArgs:
      description: The CLI arguments passed to an OCR-D processor
      type: object
      properties:
        workspace: {$ref: '#/components/schemas/Workspace'}
        input_file_grps: {type: string}
        output_file_grps: {type: string}
        page_id: {type: string}
    ProcessorCall:
      allOf:
        - {$ref: '#/components/schemas/ProcessorArgs'}
        - type: object
          description: Full representation of a CLI call of a processor
          required: ['executable']
          properties:
            executable: {$ref: '#/components/schemas/OcrdExecutable'}
    ProcessorJob:
      allOf:
        - {$ref: '#/components/schemas/Job'}
        - type: object
          properties:
            processor: {$ref: '#/components/schemas/Processor'}
            workspace: {$ref: '#/components/schemas/Workspace'}
    Workflow:
      allOf:
        - {$ref: '#/components/schemas/Resource'}
    WorkflowJob:
      allOf:
        - {$ref: '#/components/schemas/Job'}
        - type: object
          properties:
            workflow: {$ref: '#/components/schemas/Workflow'}
            workspace: {$ref: '#/components/schemas/Workspace'}
    DiscoveryResponse:
      type: object
      properties:
        ram:
          description: All available RAM in bytes
          type: number
        cpu_cores:
          description: Number of available CPU cores
          type: number
        has_ocrd_all:
          description: Whether deployment is based on ocrd_all
          type: boolean
        has_cuda:
          description: Whether deployment supports NVIDIA's CUDA
          type: boolean
        ocrd_all_version:
          description: Git tag of the ocrd_all repo
          type: string

